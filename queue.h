#pragma once

/*
Реализация структуры данных Очередь.
Очередь - структура данных, которая работает по принципу FIFO.
Внутреннее представление данных в очереди - список или вектор (что подходит лучше?).
*/


// раскомментируйте одну из следующих строк в зависимости от того, что Вы выбрали

#include "list.h"

struct queue {
	list* l;
	/* опишите поля очереди */

	queue() {
		l = new list();
		// конструктор, в котором, возможно, нужно произвести какую-то инициализацию
	}

	// добавить новый элемент в очередь
	void enqueue(int value) {
		l->add(value);

	}

	// удалить первый элемент из очереди, вернуть удаляемое значение
	int dequeue() {
		int del = l->get(0);
		l->remove(0);
		return del;
	}

	// вернуть первый элемент из очереди (не удаляя его)
	int first() {
		return l->get(0);
	}

	// размер очереди
	int size() {
		return l->sise();
	}

	~queue() {
		// деструктор, подчистить память, если это необходимо
	}
};
